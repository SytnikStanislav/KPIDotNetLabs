//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WebFormsMsMqClient.AcademicService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AcademicService.IAcademicService")]
    public interface IAcademicService {
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/CreateSubject")]
        void CreateSubject(string Subject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/CreateSubject")]
        System.Threading.Tasks.Task CreateSubjectAsync(string Subject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/UpdateSubject")]
        void UpdateSubject(string updatedSubject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/UpdateSubject")]
        System.Threading.Tasks.Task UpdateSubjectAsync(string updatedSubject);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/RemoveSubject")]
        void RemoveSubject(string SubjectId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/RemoveSubject")]
        System.Threading.Tasks.Task RemoveSubjectAsync(string SubjectId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/CreateGroup")]
        void CreateGroup(string Group);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/CreateGroup")]
        System.Threading.Tasks.Task CreateGroupAsync(string Group);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/UpdateGroup")]
        void UpdateGroup(string updatedGroup);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/UpdateGroup")]
        System.Threading.Tasks.Task UpdateGroupAsync(string updatedGroup);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/RemoveGroup")]
        void RemoveGroup(string GroupId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/RemoveGroup")]
        System.Threading.Tasks.Task RemoveGroupAsync(string GroupId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/CreateSiG")]
        void CreateSiG(string SiG);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/CreateSiG")]
        System.Threading.Tasks.Task CreateSiGAsync(string SiG);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/UpdateSiG")]
        void UpdateSiG(string updatedSiG);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/UpdateSiG")]
        System.Threading.Tasks.Task UpdateSiGAsync(string updatedSiG);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/RemoveSiG")]
        void RemoveSiG(string SiGId);
        
        [System.ServiceModel.OperationContractAttribute(IsOneWay=true, Action="http://tempuri.org/IAcademicService/RemoveSiG")]
        System.Threading.Tasks.Task RemoveSiGAsync(string SiGId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAcademicServiceChannel : WebFormsMsMqClient.AcademicService.IAcademicService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AcademicServiceClient : System.ServiceModel.ClientBase<WebFormsMsMqClient.AcademicService.IAcademicService>, WebFormsMsMqClient.AcademicService.IAcademicService {
        
        public AcademicServiceClient() {
        }
        
        public AcademicServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AcademicServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AcademicServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AcademicServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void CreateSubject(string Subject) {
            base.Channel.CreateSubject(Subject);
        }
        
        public System.Threading.Tasks.Task CreateSubjectAsync(string Subject) {
            return base.Channel.CreateSubjectAsync(Subject);
        }
        
        public void UpdateSubject(string updatedSubject) {
            base.Channel.UpdateSubject(updatedSubject);
        }
        
        public System.Threading.Tasks.Task UpdateSubjectAsync(string updatedSubject) {
            return base.Channel.UpdateSubjectAsync(updatedSubject);
        }
        
        public void RemoveSubject(string SubjectId) {
            base.Channel.RemoveSubject(SubjectId);
        }
        
        public System.Threading.Tasks.Task RemoveSubjectAsync(string SubjectId) {
            return base.Channel.RemoveSubjectAsync(SubjectId);
        }
        
        public void CreateGroup(string Group) {
            base.Channel.CreateGroup(Group);
        }
        
        public System.Threading.Tasks.Task CreateGroupAsync(string Group) {
            return base.Channel.CreateGroupAsync(Group);
        }
        
        public void UpdateGroup(string updatedGroup) {
            base.Channel.UpdateGroup(updatedGroup);
        }
        
        public System.Threading.Tasks.Task UpdateGroupAsync(string updatedGroup) {
            return base.Channel.UpdateGroupAsync(updatedGroup);
        }
        
        public void RemoveGroup(string GroupId) {
            base.Channel.RemoveGroup(GroupId);
        }
        
        public System.Threading.Tasks.Task RemoveGroupAsync(string GroupId) {
            return base.Channel.RemoveGroupAsync(GroupId);
        }
        
        public void CreateSiG(string SiG) {
            base.Channel.CreateSiG(SiG);
        }
        
        public System.Threading.Tasks.Task CreateSiGAsync(string SiG) {
            return base.Channel.CreateSiGAsync(SiG);
        }
        
        public void UpdateSiG(string updatedSiG) {
            base.Channel.UpdateSiG(updatedSiG);
        }
        
        public System.Threading.Tasks.Task UpdateSiGAsync(string updatedSiG) {
            return base.Channel.UpdateSiGAsync(updatedSiG);
        }
        
        public void RemoveSiG(string SiGId) {
            base.Channel.RemoveSiG(SiGId);
        }
        
        public System.Threading.Tasks.Task RemoveSiGAsync(string SiGId) {
            return base.Channel.RemoveSiGAsync(SiGId);
        }
    }
}
